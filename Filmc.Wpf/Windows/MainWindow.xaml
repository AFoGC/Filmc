<Window x:Class="Filmc.Wpf.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Filmc.Wpf.Windows"
        xmlns:vm="clr-namespace:Filmc.Wpf.ViewModels"
        xmlns:ev="clr-namespace:Filmc.Wpf.EntityViews"
        xmlns:views="clr-namespace:Filmc.Wpf.Views"
        xmlns:global="clr-namespace:Filmc.Wpf"
        mc:Ignorable="d" Height="775" Width="1265"
        Title="MainWindow" Background="{x:Null}" 
        WindowStyle="None" ResizeMode="CanResizeWithGrip">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding SaveSettingsCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding SaveAndExitCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding KeyDownCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.Resources>
            <ev:BindingProxy x:Key="proxy" Data="{Binding}"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition />
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        <Rectangle MouseDown="OnHeaderMouseDown" Fill="{StaticResource MainBackground}"/>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Style="{StaticResource GrayButton}" Content="__" Width="40" 
                    Click="MinimizeWindow"/>
            <Button Style="{StaticResource GrayButton}" Content="▢" Width="40" 
                    Click="MaximizeWindow"/>
            <Button Style="{StaticResource CloseButton}" Content="❌" Width="40" 
                    Click="CloseWindow"/>
        </StackPanel>
        
        <StackPanel Grid.Row="1" Background="{StaticResource DefaultButtonColor}">
            <StackPanel.Resources>
                <Style TargetType="ToggleButton" BasedOn="{StaticResource NavbarToggleButton}">
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="Width" Value="250"/>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="5,0,0,0"/>
                </Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal"/>
                </Style>
            </StackPanel.Resources>

            <ToggleButton IsChecked="{Binding FilmsSelected}">
                <ToggleButton.Content>
                    <StackPanel>
                        <Path Style="{StaticResource FilmImage}" Stretch="Uniform" Height="20"/>
                        <TextBlock Text="{DynamicResource nav_film}"/>
                    </StackPanel>
                </ToggleButton.Content>
            </ToggleButton>
            <ToggleButton IsChecked="{Binding BooksSelected}">
                <ToggleButton.Content>
                    <StackPanel>
                        <Path Style="{StaticResource BookImage}" Stretch="Uniform" Height="20"/>
                        <TextBlock Text="{DynamicResource nav_book}"/>
                    </StackPanel>
                </ToggleButton.Content>
            </ToggleButton>
            <ToggleButton IsChecked="{Binding SettingsSelected}">
                <ToggleButton.Content>
                    <StackPanel>
                        <Path Style="{StaticResource SettingsImage}" Stretch="Uniform" Height="20"/>
                        <TextBlock Text="{DynamicResource nav_setting}"/>
                    </StackPanel>
                </ToggleButton.Content>
            </ToggleButton>
        </StackPanel>

        <!--
        <ContentControl Content="{Binding CurrentMenu}" Grid.Row="2">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type vm:FilmsMenuViewModel}">
                    <views:FilmsMenuView />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:BooksMenuViewModel}">
                    <views:BooksMenuView />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:SettingsMenuViewModel}">
                    <views:SettingsMenuView />
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>
        -->

        <views:FilmsMenuView DataContext="{Binding FilmsMenuViewModel}" Grid.Row="2">
            <views:FilmsMenuView.Style>
                <Style TargetType="{x:Type views:FilmsMenuView}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Data.FilmsSelected, Source={StaticResource proxy}}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </views:FilmsMenuView.Style>
        </views:FilmsMenuView>

        <views:BooksMenuView DataContext="{Binding BooksMenuViewModel}" Grid.Row="2">
            <views:BooksMenuView.Style>
                <Style TargetType="{x:Type views:BooksMenuView}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Data.BooksSelected, Source={StaticResource proxy}}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </views:BooksMenuView.Style>
        </views:BooksMenuView>

        <views:SettingsMenuView DataContext="{Binding SettingsMenuViewModel}" Grid.Row="2">
            <views:SettingsMenuView.Style>
                <Style TargetType="{x:Type views:SettingsMenuView}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Data.SettingsSelected, Source={StaticResource proxy}}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </views:SettingsMenuView.Style>
        </views:SettingsMenuView>

        <views:UpdateMenuView DataContext="{Binding UpdateMenuViewModel}" Visibility="{Binding MenuVisibility}" 
                              Grid.Row="1" Grid.RowSpan="2"/>

        <TextBlock DataContext="{Binding StatusBarViewModel}" VerticalAlignment="Stretch" 
                   Padding="10,0" Grid.Row="3">
            
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Background" Value="{StaticResource DefaultButtonColor}"/>
                    <Setter Property="Foreground" Value="WhiteSmoke"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static global:StatusEnum.Saved}">
                            <Setter Property="Background" Value="{StaticResource ButtonGreen}"/>
                            <Setter Property="Text" Value="{DynamicResource sb_saved}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static global:StatusEnum.UnSaved}">
                            <Setter Property="Background" Value="{StaticResource ButtonRed}"/>
                            <Setter Property="Text" Value="{DynamicResource sb_unsaved}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </Grid>
</Window>
